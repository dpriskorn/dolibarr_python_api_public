[tool.poetry]
name = "dolibarr-python-api"
version = "0.1.0"
description = ""
authors = ["Egil D. Priskorn <egils@riseup.net>"]
readme = "README.md"
# packages = [{include = "src"}]

[tool.poetry.dependencies]
# add lxml
python = "^3.10"
# console-menu = "^0.7.1"
# apprise = "^1.1.0" # used to notify the user
backoff = "^2.2.1"
beautifulsoup4 = "^4.11.1"
iso8601 = "^1.1.0"
numpy = "^2.2.1" # used by pdf code
openpyxl = "^3.0.10"
pandas = "^2.2.2" # used by pdf code
pdfplumber = "^0.7.5" # used by pdf code
python-dateutil = "^2.8.2"
requests = "^2.28.1"
rich = "^12.6.0"
sql = "^2022.4.0"
# fuzzywuzzy = "^0.18.0"
# Levenshtein = "^0.20.6"
flatten-json = "^0.1.13"
psycopg2-binary = "^2.9.6"
# googletrans = "^3.0.0"
paramiko = "^3.1.0"
sshtunnel = "^0.4.0"
pydantic = "^2.7.1"
lxml = "^5.2.2"
curlify = "^2.2.1"
simple-term-menu = "^1.6.4"

[tool.poetry.group.dev.dependencies]
black = "^22.8.0"
codespell = "^2.2.1"
coverage = "^6.5.0"
dead = "^1.5.0"
mypy = "^1.1.1"
pre-commit = "^2.20.0"
pytest = "^7.1.3"
ruff = "^0.0.263"
safety = "^2.2.0"
tomli = "^2.0.1"
types-python-dateutil = "^2.8.19.2"
types-requests = "^2.28.11.2"
virtualenv = "20.17.1"
#pydantic = {extras = ["email"], version = "^1.10.7"}
pytest-cov = "^4.0.0"

[tool.ruff]
select = [
  "A",      # flake8-builtins
  "ARG",    # flake8-unused-arguments
  "B",      # flake8-bugbear
  "BLE",    # flake8-blind-except
  "C4",     # flake8-comprehensions
  "C90",    # McCabe cyclomatic complexity
  "DTZ",    # flake8-datetimez
  "E",      # pycodestyle
  "EXE",    # flake8-executable
  "F",      # Pyflakes
  "FBT",    # flake8-boolean-trap
  "G",      # flake8-logging-format
  "I",      # isort
  "ICN",    # flake8-import-conventions
  "INP",    # flake8-no-pep420
  "INT",    # flake8-gettext
  "ISC",    # flake8-implicit-str-concat
  "N",      # pep8-naming
  "PGH",    # pygrep-hooks
  "PIE",    # flake8-pie
  "PL",     # Pylint
  "PT",     # flake8-pytest-style
  "PTH",    # flake8-use-pathlib
  "PYI",    # flake8-pyi
  "RSE",    # flake8-raise
  "RUF",    # Ruff-specific rules
  "S",      # flake8-bandit
  "SIM",    # flake8-simplify
  "SLF",    # flake8-self
  "T10",    # flake8-debugger
  "TCH",    # flake8-type-checking
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # pycodestyle
  "YTT",    # flake8-2020
  # "ANN",  # flake8-annotations
  # "COM",  # flake8-commas
  # "D",    # pydocstyle
  # "DJ",   # flake8-django
  # "EM",   # flake8-errmsg
  # "ERA",  # eradicate
  # "NPY",  # NumPy-specific rules
  # "PD",   # pandas-vet
  # "Q",    # flake8-quotes
  # "RET",  # flake8-return
  # "T20",  # flake8-print
  # "TRY",  # tryceratops
]
ignore = [
  "A003",
  "ARG002",
  "C408",
  "DTZ003",
  "EXE002",
  "F401",
  "FBT001",
  "FBT002",
  "G003",
  "G004",
  "INP001",
  "N999",
  "PGH003",
  "PLC1901",
  "PLR2004",
  "PLR5501",
  "PLW2901",
  "PTH110",
  "PTH123",
  "RSE102",
  "S113",
  "S324",
  "S501",
  "SIM103",
  "SIM108",
  "SIM118",
  "ISC003",
  "S608",
  "TCH001",
  "S108",
  "ISC001",
  "PTH112" # os.path -> Path
  ]
line-length = 160
target-version = "py37"

[tool.ruff.isort]
known-first-party = ["config"]

[tool.ruff.mccabe]
max-complexity = 11

[tool.ruff.per-file-ignores]
"tests/*" = ["PT009", "PT018", "RUF001", "RUF003", "S101"]
"src/helpers/crud/create.py" = ["PLR0913", "PLR0912", "C901"]
"src/models/dolibarr/product.py" = ["PLR0913", "PLR0912", "C901", "N815"]
"src/models/suppliers/bikester/product.py" = ["PLR0915", "PLR0912", "C901"]
"src/models/dolibarr/supplier/__init__.py" =["PLR0915", "PLR0912", "C901"]
"src/models/dolibarr/__init__.py" = ["PLR0915", "PLR0912", "C901", "PLR0913"]
"src/models/suppliers/shimano/pdfplumber.py"  = ["PLR0915", "PLR0912", "C901", "PLR0913"]
"src/models/dolibarr/accounting/report.py"  = ["PLR0915", "PLR0912", "C901", "PLR0913"]
"src/models/suppliers/cycletech/product.py"  = ["PLR0915", "PLR0912", "C901", "PLR0913"]
"src/models/suppliers/biltema/product.py" = ["PLR0915", "PLR0912", "C901", "PLR0913"]
"src/models/suppliers/cykelgear/product.py" = ["PLR0915", "PLR0912", "C901"]
"tests/suppliers/test_messingschlager_order.py" = ["DTZ001"]
"src/models/dolibarr/customer/invoice.py" = ["DTZ006"]
"src/models/marketplaces/sello/order.py" = ["ISC001"]
"src/models/suppliers/hoj24/product.py" = ["SIM114"]
"tests/suppliers/shimano/test_pdfplumber.py" = ["DTZ001"]
"src/models/suppliers/messingschlager/product.py" = ["SIM114", "PLR0915", "PLR0912", "C901"]
"src/models/suppliers/shimano/product/search_product.py" = ["N815"] # mixed case

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
